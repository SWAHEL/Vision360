services:
  postgres:
    image: postgres:16
    container_name: v360_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1",
        ]
      interval: 5s
      timeout: 5s
      retries: 30

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: v360_pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}
    container_name: v360_es
    environment:
      discovery.type: single-node
      xpack.security.enabled: "true"
      ELASTIC_PASSWORD: ${ES_PASSWORD}
      xpack.security.http.ssl.enabled: "false"
    ports:
      - "${ES_HTTP_PORT}:9200"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -qO- http://localhost:9200 >/dev/null 2>&1 || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 30
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:${ES_VERSION}
    container_name: v360_kibana
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: ${ES_PASSWORD}
    ports:
      - "${KIBANA_PORT}:5601"

  arangodb:
    image: arangodb:3
    container_name: v360_arango
    environment:
      ARANGO_ROOT_PASSWORD: ${ARANGO_ROOT_PASSWORD}
    ports:
      - "${ARANGO_PORT}:8529"
    volumes:
      - arangodata:/var/lib/arangodb3

  mailhog:
    image: mailhog/mailhog
    container_name: v360_mailhog
    ports:
      - "${MAILHOG_SMTP}:1025"
      - "${MAILHOG_UI}:8025"

volumes:
  pgdata: {}
  esdata: {}
  arangodata: {}
